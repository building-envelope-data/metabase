version: '3.3'

services:
  database: # https://hub.docker.com/_/postgres
    restart: always
    image: postgres:13.3-buster
    # For possible command-line arguments see
    # https://www.postgresql.org/docs/current/app-postgres.html
    # and for possible configuration parameters like `max_connections` see
    # https://www.postgresql.org/docs/current/runtime-config.html
    command: [
      "-c", "max_connections=100"
    ]
    healthcheck:
      # pg_isready: https://www.postgresql.org/docs/13/app-pg-isready.html
      test: ["CMD-SHELL", "pg_isready --username=postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=postgres
      - PGPASSFILE=/run/secrets/postgres_passwords
    volumes:
      - data:/var/lib/postgresql/data
      - ./secrets:/run/secrets:ro

  email: # https://hub.docker.com/r/rnwood/smtp4dev
    restart: always
    image: rnwood/smtp4dev:v3.1
    # For all configuration options see
    # https://github.com/rnwood/smtp4dev/blob/master/docker-compose.yml
    volumes:
      - emails:/smtp4dev
    environment:
      - ServerOptions__BasePath=/email
      - ServerOptions__HostName=${HOST}
      - ServerOptions__Database=database.db
      - ServerOptions__NumberOfMessagesToKeep=100
      - ServerOptions__NumberOfSessionsToKeep=100
      - ServerOptions__TlsMode=None
      - ServerOptions__TlsCertificate=
      - RelayOptions__SmtpServer=${RELAY_SMTP_HOST}
      - RelayOptions__SmtpPort=${RELAY_SMTP_PORT}
      - RelayOptions__AllowedEmailsString=${RELAY_ALLOWED_EMAILS}

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: ./Dockerfile-production
    # https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-5.0#command-line
    # command: ["dotnet", "App.dll", "/Serilog:MinimumLevel:Default=Debug", "/Serilog:MinimumLevel:Microsoft=Debug", "/Serilog:MinimumLevel:Microsoft.Hosting.Lifetime=Debug", "/Serilog:MinimumLevel:Override:Microsoft=Debug", "/Serilog:MinimumLevel:Override:Microsoft.AspNetCore=Debug", "/Serilog:MinimumLevel:Override:System=Debug"]
    command: ["dotnet", "App.dll"]
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - ASPNETCORE_ENVIRONMENT=production
      - XBASE_Host=https://${HOST}
      - XBASE_JsonWebToken__EncryptionCertificatePassword=${JSON_WEB_TOKEN_ENCRYPTION_CERTIFICATE_PASSWORD}
      - XBASE_JsonWebToken__SigningCertificatePassword=${JSON_WEB_TOKEN_SIGNING_CERTIFICATE_PASSWORD}
      - XBASE_Email__SmtpHost=${SMTP_HOST}
      - XBASE_Email__SmtpPort=${SMTP_PORT}
      - XBASE_TestlabSolarFacadesOpenIdConnectClientSecret=${TESTLAB_SOLAR_FACADES_OPEN_ID_CONNECT_CLIENT_SECRET}
    volumes:
      - backend_logs:/app/logs
      - ./secrets:/run/secrets:ro
    depends_on:
      - database
      - email

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: ./Dockerfile-production
    command: ["yarn", "start"]
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

  nginx: # https://hub.docker.com/_/nginx
    restart: always
    image: nginx:1.21.1
    command: [
      "nginx",
      "-g", "daemon off;"
      ]
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./nginx/templates/production:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/etc/nginx/html:ro
    depends_on:
      - frontend
      - backend
      - email

volumes:
  data:
  emails:
  backend_logs:
