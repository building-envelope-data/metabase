fragment InstitutionPartial on Institution {
  id
  uuid
  name
  abbreviation
  description
  websiteLocator
  state
}

query Institutions($state: InstitutionState! = VERIFIED) {
  institutions(where: { state: { eq: $state } }) {
    nodes {
      ...InstitutionPartial
    }
  }
}

mutation CreateInstitution(
  $name: String!
  $abbreviation: String
  $description: String!
  $ownerIds: [Uuid!]!
  $managerId: Uuid
  $websiteLocator: Url
) {
  createInstitution(
    input: {
      name: $name
      abbreviation: $abbreviation
      description: $description
      ownerIds: $ownerIds
      managerId: $managerId
      websiteLocator: $websiteLocator
    }
  ) {
    institution {
      ...InstitutionPartial
    }
    errors {
      code
      message
      path
    }
  }
}

mutation UpdateInstitution(
  $institutionId: Uuid!
  $name: String!
  $abbreviation: String
  $description: String!
  $websiteLocator: Url
) {
  updateInstitution(
    input: {
      institutionId: $institutionId
      name: $name
      abbreviation: $abbreviation
      description: $description
      websiteLocator: $websiteLocator
    }
  ) {
    institution {
      ...InstitutionPartial
    }
    errors {
      code
      message
      path
    }
  }
}

mutation VerifyInstitution($institutionId: Uuid!) {
  verifyInstitution(input: { institutionId: $institutionId }) {
    institution {
      ...InstitutionPartial
    }
    errors {
      code
      message
      path
    }
  }
}

query Institution($uuid: Uuid!) {
  institution(uuid: $uuid) {
    ...InstitutionPartial
    manufacturedComponents {
      edges {
        node {
          id
          uuid
          name
          abbreviation
          description
          categories
          availability {
            from
            to
          }
        }
      }
      canCurrentUserAddEdge
    }
    pendingManufacturedComponents: manufacturedComponents(pending: true) {
      edges {
        node {
          id
          uuid
          name
        }
      }
      canCurrentUserConfirmEdge
    }
    operatedDatabases {
      edges {
        node {
          id
          uuid
          name
          description
          locator
          operator {
            node {
              id
              uuid
              name
            }
          }
        }
      }
      canCurrentUserAddEdge
    }
    representatives {
      edges {
        node {
          id
          uuid
          name
        }
        role
      }
      canCurrentUserAddEdge
    }
    pendingRepresentatives: representatives(pending: true) {
      edges {
        node {
          id
          uuid
          name
        }
        role
      }
    }
    manager {
      node {
        id
        uuid
        name
      }
    }
    managedDataFormats {
      edges {
        node {
          id
          uuid
          name
          extension
          description
          mediaType
          schemaLocator
          reference {
            abstract
            section
            title
            ... on Standard {
              locator
              numeration {
                mainNumber
                prefix
                suffix
              }
              standardizers
              year
            }
            ... on Publication {
              arXiv
              authors
              doi
              urn
              webAddress
            }
          }
          manager {
            node {
              id
              uuid
              name
            }
          }
        }
      }
      canCurrentUserAddEdge
    }
    managedMethods {
      edges {
        node {
          id
          uuid
          name
          description
          validity {
            from
            to
          }
          availability {
            from
            to
          }
          reference {
            abstract
            section
            title
            ... on Standard {
              locator
              numeration {
                mainNumber
                prefix
                suffix
              }
              standardizers
              year
            }
            ... on Publication {
              arXiv
              authors
              doi
              urn
              webAddress
            }
          }
          calculationLocator
          categories
        }
      }
      canCurrentUserAddEdge
    }
    developedMethods {
      edges {
        node {
          id
          uuid
          name
        }
      }
    }
    pendingDevelopedMethods: developedMethods(pending: true) {
      edges {
        node {
          id
          uuid
          name
        }
      }
      canCurrentUserConfirmEdge
    }
    managedInstitutions {
      edges {
        node {
          id
          uuid
          name
        }
      }
      canCurrentUserAddEdge
    }
  }
}

mutation AddInstitutionRepresentative(
  $institutionId: Uuid!
  $userId: Uuid!
  $role: InstitutionRepresentativeRole!
) {
  addInstitutionRepresentative(
    input: { institutionId: $institutionId, userId: $userId, role: $role }
  ) {
    institutionRepresentativeEdge {
      node {
        id
        uuid
        name
      }
      role
    }
    errors {
      code
      message
      path
    }
  }
}
