using System;
using System.Threading.Tasks;
using Metabase.Authorization;
using Microsoft.AspNetCore.Antiforgery;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace Metabase.Controllers;

// For gotchas regarding antiforgery tokens read
// [Clarity around IAntiforgery and ValidateAntiForgeryToken](https://github.com/dotnet/aspnetcore/issues/2783)
public sealed class AntiforgeryController : Controller
{
    private const string XsrfCookieKey = "XSRF-TOKEN";

    private readonly CookieOptions XsrfCookieOptions =
        new()
        {
            HttpOnly = false
        };

    private readonly IAntiforgery _antiforgeryService;

    public AntiforgeryController(IAntiforgery antiforgeryService)
    {
        _antiforgeryService = antiforgeryService;
    }

    [HttpGet("~/antiforgery/token")]
    public async Task<IActionResult> Token()
    {
        await HttpContextAuthentication.Authenticate(HttpContext).ConfigureAwait(false);
        var tokens = _antiforgeryService.GetAndStoreTokens(HttpContext);
        HttpContext.Response.Cookies.Append(
            XsrfCookieKey,
            tokens.RequestToken ??
            throw new InvalidOperationException(
                "The request token supposed to be generated by the antiforgery service is null."),
            XsrfCookieOptions
        );
        return new StatusCodeResult(StatusCodes.Status200OK);
    }
}